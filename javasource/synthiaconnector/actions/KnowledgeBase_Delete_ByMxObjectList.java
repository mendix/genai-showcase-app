// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package synthiaconnector.actions;

import java.util.ArrayList;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import genaicommons.proxies.KnowledgeBaseChunk;
import synthiaconnector.impl.ChunkUtils;
import synthiaconnector.impl.MxLogger;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * Use this operation to delete existing chunks in a knowledge base based on the MxObjectID. 
 * MxObjectList is the list of (original) Mendix objects that the chunks in the knowledge base represent. Only chunks related to these Mendix objects are to be deleted.
 * 
 * The Connection entity passed must be of type SynthiaConnection and must contain the KnowledgeBaseName string attribute filled and a Configuration of type Knowledge Base.
 */
public class KnowledgeBase_Delete_ByMxObjectList extends CustomJavaAction<java.lang.Boolean>
{
	private IMendixObject __Connection;
	private genaicommons.proxies.Connection Connection;
	private java.util.List<IMendixObject> MxObjectList;

	public KnowledgeBase_Delete_ByMxObjectList(IContext context, IMendixObject Connection, java.util.List<IMendixObject> MxObjectList)
	{
		super(context);
		this.__Connection = Connection;
		this.MxObjectList = MxObjectList;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.Connection = this.__Connection == null ? null : genaicommons.proxies.Connection.initialize(getContext(), __Connection);

		// BEGIN USER CODE
		try {
			if (MxObjectList.isEmpty()) {
				LOGGER.warn("Empty list was passed, nothing was deleted");
			}
			java.util.List<KnowledgeBaseChunk> chunkList = new ArrayList<>();
			MxObjectList.forEach(o -> ChunkUtils.addChunkWithMxObjectID(getContext(), o, chunkList));
			return synthiaconnector.proxies.microflows.Microflows.knowledgeBaseChunkList_Delete_FromKnowledgeBase(getContext(), chunkList, Connection);
		} catch (Error e) {
			LOGGER.error(e.getMessage());
			return false;
		}
		
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "KnowledgeBase_Delete_ByMxObjectList";
	}

	// BEGIN EXTRA CODE
	private static final MxLogger LOGGER = new MxLogger(KnowledgeBase_Delete_ByMxObjectList.class);
	// END EXTRA CODE
}
