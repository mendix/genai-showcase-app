// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package amazons3connector.actions;

import static java.util.Objects.requireNonNull;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import amazons3connector.impl.AmazonS3Client;
import amazons3connector.impl.MxLogger;
import software.amazon.awssdk.services.s3.S3Client;
import software.amazon.awssdk.services.s3.model.CopyObjectRequest.Builder;

public class CopyObject extends CustomJavaAction<java.lang.Boolean>
{
	private IMendixObject __CopyObjectRequest;
	private amazons3connector.proxies.CopyObjectRequest CopyObjectRequest;
	private awsauthentication.proxies.ENUM_Region Region;
	private IMendixObject __Credentials;
	private awsauthentication.proxies.Credentials Credentials;

	public CopyObject(IContext context, IMendixObject CopyObjectRequest, java.lang.String Region, IMendixObject Credentials)
	{
		super(context);
		this.__CopyObjectRequest = CopyObjectRequest;
		this.Region = Region == null ? null : awsauthentication.proxies.ENUM_Region.valueOf(Region);
		this.__Credentials = Credentials;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.CopyObjectRequest = this.__CopyObjectRequest == null ? null : amazons3connector.proxies.CopyObjectRequest.initialize(getContext(), __CopyObjectRequest);

		this.Credentials = this.__Credentials == null ? null : awsauthentication.proxies.Credentials.initialize(getContext(), __Credentials);

		// BEGIN USER CODE
		software.amazon.awssdk.services.s3.model.CopyObjectResponse awsResponse = null;
		try {
			//Validation of input parameters
			requireNonNull(this.Credentials, "AWS Credentials are required.");
			requireNonNull(this.Region, "AWS Region is required.");
			requireNonNull(this.CopyObjectRequest, "CopyObjectRequest is required.");
			
			//Validation of the CopyObjectRequest object
			validateRequest();
			
			// Building the Java CopyObjectRequest
			software.amazon.awssdk.services.s3.model.CopyObjectRequest awsRequest = createAWSRequest();
			// Logging of the request building
			LOGGER.debug("AWS request:", awsRequest);
			// Client creation
			S3Client client = AmazonS3Client.getS3Client(Credentials, Region, CopyObjectRequest);
			// Invoke action on AWS client
			awsResponse = client.copyObject(awsRequest);
						
			// Log the response
			LOGGER.debug("AWS response:", awsResponse);			
			}
			catch (Exception e) {
				LOGGER.error(e.getMessage());
				throw e;
			}
			// Determine return value
			return awsResponse.sdkHttpResponse().isSuccessful();

		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "CopyObject";
	}

	// BEGIN EXTRA CODE
	private static final MxLogger LOGGER = new MxLogger(CopyObject.class);
	
	private void validateRequest() throws CoreException {	
		// Validate request 
		requireNonNull(CopyObjectRequest.getSourceBucketName(), "The Source Bucket name is required");
		requireNonNull(CopyObjectRequest.getDestinationBucketName(), "The Destination Bucket name is required");
		requireNonNull(CopyObjectRequest.getSourceKey(), "The Source Key is required");
		requireNonNull(CopyObjectRequest.getDestinationKey(), "The Destination Key is required");
		if (CopyObjectRequest.getSourceBucketName().isBlank()) {
			throw new IllegalArgumentException("Source bucket name cannot be empty or blank");
		}
		if (CopyObjectRequest.getDestinationBucketName().isBlank()) {
			throw new IllegalArgumentException("Destination bucket name cannot be empty or blank");
		}
		if (CopyObjectRequest.getSourceKey().isBlank()) {
			throw new IllegalArgumentException("Source Key cannot be empty or blank");
		}
		if (CopyObjectRequest.getDestinationKey().isBlank()) {
			throw new IllegalArgumentException("Destination Key cannot be empty or blank");
		}
	}
	
	private software.amazon.awssdk.services.s3.model.CopyObjectRequest createAWSRequest() {
		Builder awsRequestBuilder = software.amazon.awssdk.services.s3.model.CopyObjectRequest.builder()
				.destinationBucket(CopyObjectRequest.getDestinationBucketName())
				.sourceBucket(CopyObjectRequest.getSourceBucketName())
				.destinationKey(CopyObjectRequest.getDestinationKey())
				.sourceKey(CopyObjectRequest.getSourceKey());
		return awsRequestBuilder.build();
	}
	
	// END EXTRA CODE
}
