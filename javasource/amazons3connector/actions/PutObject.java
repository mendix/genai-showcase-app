// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package amazons3connector.actions;

import static java.util.Objects.requireNonNull;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import amazons3connector.impl.AmazonS3Client;
import amazons3connector.impl.MxLogger;
import software.amazon.awssdk.services.s3.S3Client;
import java.io.InputStream;
import com.mendix.core.Core;
import software.amazon.awssdk.core.sync.RequestBody;

public class PutObject extends CustomJavaAction<java.lang.Boolean>
{
	private IMendixObject __PutObjectRequest;
	private amazons3connector.proxies.PutObjectRequest PutObjectRequest;
	private IMendixObject __Credentials;
	private awsauthentication.proxies.Credentials Credentials;
	private awsauthentication.proxies.ENUM_Region Region;
	private IMendixObject __FileDocument;
	private system.proxies.FileDocument FileDocument;

	public PutObject(IContext context, IMendixObject PutObjectRequest, IMendixObject Credentials, java.lang.String Region, IMendixObject FileDocument)
	{
		super(context);
		this.__PutObjectRequest = PutObjectRequest;
		this.__Credentials = Credentials;
		this.Region = Region == null ? null : awsauthentication.proxies.ENUM_Region.valueOf(Region);
		this.__FileDocument = FileDocument;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.PutObjectRequest = this.__PutObjectRequest == null ? null : amazons3connector.proxies.PutObjectRequest.initialize(getContext(), __PutObjectRequest);

		this.Credentials = this.__Credentials == null ? null : awsauthentication.proxies.Credentials.initialize(getContext(), __Credentials);

		this.FileDocument = this.__FileDocument == null ? null : system.proxies.FileDocument.initialize(getContext(), __FileDocument);

		// BEGIN USER CODE
		software.amazon.awssdk.services.s3.model.PutObjectResponse awsResponse = null;
		try {	
		// Validation of input parameters
			requireNonNull(this.Credentials, "AWS Credentials are required.");
			requireNonNull(this.Region, "AWS Region is required.");
			requireNonNull(this.PutObjectRequest, "PutObjectRequest is required.");
			requireNonNull(this.FileDocument, "File document is required");
			
			// Validation of the PutObjectRequest object
			validateRequest();
							
			// Building the AWS PutObjectRequest
			software.amazon.awssdk.services.s3.model.PutObjectRequest awsRequest = createAWSRequest();
			
			// Logging of the awsRequest
			LOGGER.debug("AWS request:", awsRequest);
			
			// Client creation
			S3Client client = AmazonS3Client.getS3Client(Credentials, Region, PutObjectRequest);
			
			// Create request
			InputStream is = Core.getFileDocumentContent(getContext(), FileDocument.getMendixObject());
			RequestBody body = RequestBody.fromInputStream(is, FileDocument.getSize());
			
			// Invoke action on AWS client
			awsResponse = client.putObject(awsRequest, body);
			is.close();	
			
			// Log the response
			LOGGER.debug("AWS response:", awsResponse);
		}
		catch (Exception e) {
			LOGGER.error(e.getMessage());
			throw e;
		}
		// Determine return value
		return awsResponse.sdkHttpResponse().isSuccessful();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "PutObject";
	}

	// BEGIN EXTRA CODE
	private static final MxLogger LOGGER = new MxLogger(PutObject.class);
	
	private void validateRequest() throws CoreException {	
		// Validate BucketName
		requireNonNull(PutObjectRequest.getBucketName(), "Bucket name is required");
		if (PutObjectRequest.getBucketName().isBlank()) {
			throw new IllegalArgumentException("Bucket name cannot be blank");
		} 
		
		// Validate Key
		requireNonNull(PutObjectRequest.getKey(), "Key is required");
		if (PutObjectRequest.getKey().isBlank()) {
			throw new IllegalArgumentException("Key cannot be blank");
		} 
		
		// Validate file size 
		if (!this.FileDocument.getHasContents()){
			throw new NullPointerException("File size can not be empty");
		}
		
	}
	
	private software.amazon.awssdk.services.s3.model.PutObjectRequest createAWSRequest() {
		software.amazon.awssdk.services.s3.model.PutObjectRequest awsRequest = software.amazon.awssdk.services.s3.model.PutObjectRequest.builder()
				.bucket(PutObjectRequest.getBucketName())
				.key(PutObjectRequest.getKey())
				.build();
		return awsRequest;
	}
	// END EXTRA CODE
}
