// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package amazons3connector.actions;

import static java.util.Objects.requireNonNull;
import java.time.Duration;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import amazons3connector.impl.MxLogger;
import amazons3connector.proxies.AbstractPresignConfig;
import amazons3connector.proxies.DeleteObjectRequest;
import amazons3connector.proxies.GetObjectRequest;
import amazons3connector.proxies.PutObjectRequest;
import awsauthentication.impl.AuthCredentialsProvider;
import awsauthentication.impl.Utils;
import software.amazon.awssdk.services.s3.presigner.S3Presigner;
import software.amazon.awssdk.services.s3.presigner.model.PresignedDeleteObjectRequest;
import software.amazon.awssdk.services.s3.presigner.model.PresignedGetObjectRequest;
import software.amazon.awssdk.services.s3.presigner.model.PresignedPutObjectRequest;

public class GeneratePresignedURL extends CustomJavaAction<java.lang.String>
{
	private IMendixObject __Credentials;
	private awsauthentication.proxies.Credentials Credentials;
	private IMendixObject __S3Request;
	private amazons3connector.proxies.AbstractS3Request S3Request;
	private awsauthentication.proxies.ENUM_Region Region;

	public GeneratePresignedURL(IContext context, IMendixObject Credentials, IMendixObject S3Request, java.lang.String Region)
	{
		super(context);
		this.__Credentials = Credentials;
		this.__S3Request = S3Request;
		this.Region = Region == null ? null : awsauthentication.proxies.ENUM_Region.valueOf(Region);
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		this.Credentials = this.__Credentials == null ? null : awsauthentication.proxies.Credentials.initialize(getContext(), __Credentials);

		this.S3Request = this.__S3Request == null ? null : amazons3connector.proxies.AbstractS3Request.initialize(getContext(), __S3Request);

		// BEGIN USER CODE
		String presignedUrl = "";
		
		try {
			requireNonNull(this.Credentials, "AWS Credentials are required.");
			requireNonNull(this.S3Request, "An S3 Request is required.");
			requireNonNull(this.Region, "AWS Region is required.");
			
			/* I didn't get a switch block to work. If you can get it to work, that would be a more elegant solution.
			 * Specifically because the implementing party may have an implementation request that
			 * inherits from the AmazonS3Connector.<Operation>Request which they may name differently.
			 * So checking for the type using getClass() or getType() didn't work for me.
			*/
			
			LOGGER.debug("Creating S3 pre-signer.");
			S3Presigner presigner = S3Presigner.builder()
		            .region(Utils.convertAWSRegion(Region))
		            .credentialsProvider(AuthCredentialsProvider.getCredentialsProvider(Credentials).getAwsCredentialsProvider())
		            .build();
			LOGGER.debug("S3 pre-signer created.");
			
			// Presigning GetObject
			if (this.S3Request instanceof GetObjectRequest) {
				LOGGER.debug("S3Request is of type GetObjectRequest");
				GetObjectRequest getObjectRequest = (GetObjectRequest) this.S3Request;
				if (getObjectRequest.getGetObjectPresignConfig_GetObjectRequest() != null) {
					AbstractPresignConfig presignConfig = getObjectRequest.getGetObjectPresignConfig_GetObjectRequest();
					
					validatePresignConfig(presignConfig, "Get");
					
					var request = software.amazon.awssdk.services.s3.model.GetObjectRequest.builder()
							.bucket(getObjectRequest.getBucketName())
							.key(getObjectRequest.getKey())
							.build();
					
					PresignedGetObjectRequest presignedGetObjectrequest = presigner.presignGetObject(p -> p
							.signatureDuration(Duration.ofSeconds(presignConfig.getExpiration()))
							.getObjectRequest(request));
					
					presignedUrl = presignedGetObjectrequest.url().toString();
				} else {
					throw new IllegalArgumentException("No instance of GetObjectPresignConfig was associated to the GetObjectRequest object.");
				}
			};
			
			// Presigning PutObject
			if (this.S3Request instanceof PutObjectRequest) {
				LOGGER.debug("S3Request is of type PutObjectRequest");
				PutObjectRequest putObjectRequest = (PutObjectRequest) this.S3Request;
				if (putObjectRequest.getPutObjectPresignConfig_PutObjectRequest() != null) {
					AbstractPresignConfig presignConfig = putObjectRequest.getPutObjectPresignConfig_PutObjectRequest();
					
					validatePresignConfig(presignConfig, "Put");
					
					var request = software.amazon.awssdk.services.s3.model.PutObjectRequest.builder()
							.bucket(putObjectRequest.getBucketName())
							.key(putObjectRequest.getKey())
							.build();
					
					PresignedPutObjectRequest presignedPutObjectrequest = presigner.presignPutObject(p -> p
							.signatureDuration(Duration.ofSeconds(presignConfig.getExpiration()))
							.putObjectRequest(request));
					
					presignedUrl = presignedPutObjectrequest.url().toString();
				} else {
					throw new IllegalArgumentException("No instance of PutObjectPresignConfig was associated to the PutObjectRequest object.");
				}
			};
			
			// Presigning DeleteObject
			if (this.S3Request instanceof DeleteObjectRequest) {
				LOGGER.debug("S3Request is of type DeleteObjectRequest");
				DeleteObjectRequest deleteObjectRequest = (DeleteObjectRequest) this.S3Request;
				if (deleteObjectRequest.getDeleteObjectPresignConfig_DeleteObjectRequest() != null) {
					AbstractPresignConfig presignConfig = deleteObjectRequest.getDeleteObjectPresignConfig_DeleteObjectRequest();
					
					validatePresignConfig(presignConfig, "Delete");
					
					var request = software.amazon.awssdk.services.s3.model.DeleteObjectRequest.builder()
							.bucket(deleteObjectRequest.getBucketName())
							.key(deleteObjectRequest.getKey())
							.build();
					
					PresignedDeleteObjectRequest presignedDeleteObjectrequest = presigner.presignDeleteObject(p -> p
							.signatureDuration(Duration.ofSeconds(presignConfig.getExpiration()))
							.deleteObjectRequest(request));
					
					presignedUrl = presignedDeleteObjectrequest.url().toString();
				} else {
					throw new IllegalArgumentException("No instance of DeleteObjectPresignConfig was associated to the DeleteObjectRequest object.");
				}
			};
			
		} catch (Exception e) {
			LOGGER.error("An error occuring while pre-signing the request: ", e);
			throw e;
		}
	
		return presignedUrl;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "GeneratePresignedURL";
	}

	// BEGIN EXTRA CODE
	private static final MxLogger LOGGER = new MxLogger(GeneratePresignedURL.class);
	
	private static void validatePresignConfig(AbstractPresignConfig mxPresignConfig, String operation ) {
		if (mxPresignConfig.getExpiration() == null) {
			throw new IllegalArgumentException(String.format("The Expiration attribute of the %sObjectPresignConfig object cannot be empty", operation));
		}
	}
	// END EXTRA CODE
}
