// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package genaicommons.actions;

import static java.util.Objects.requireNonNull;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IDataType;
import com.mendix.webui.CustomJavaAction;
import genaicommons.impl.DeployedModelImpl;
import genaicommons.impl.MxLogger;
import genaicommons.proxies.ENUM_ModelModality;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * Action can be used to invoke a chat completions API with a request containing a list of (historical) messages comprising the conversation so far. This action is provider agnostic and will execute the microflow that is saved on the object as "Microflow" attribute.
 * - Request: Contains messages and optional attributes.
 * - DeployedModel: Configuration object that contains the model, endpoint and API key. The ModelType needs to be of type text generation.
 */
public class ChatCompletions_WithHistory extends CustomJavaAction<IMendixObject>
{
	private IMendixObject __Request;
	private genaicommons.proxies.Request Request;
	private IMendixObject __DeployedModel;
	private genaicommons.proxies.DeployedModel DeployedModel;

	public ChatCompletions_WithHistory(IContext context, IMendixObject Request, IMendixObject DeployedModel)
	{
		super(context);
		this.__Request = Request;
		this.__DeployedModel = DeployedModel;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		this.Request = this.__Request == null ? null : genaicommons.proxies.Request.initialize(getContext(), __Request);

		this.DeployedModel = this.__DeployedModel == null ? null : genaicommons.proxies.DeployedModel.initialize(getContext(), __DeployedModel);

		// BEGIN USER CODE
		try {
			validate();
			return Core.microflowCall(DeployedModel.getMicroflow())
					.withParams(mapInputParameters())
					.execute(this.getContext());

		} catch (Exception e) {
			LOGGER.error(e);
			throw e;
		}
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ChatCompletions_WithHistory";
	}

	// BEGIN EXTRA CODE
	private static final MxLogger LOGGER = new MxLogger(ChatCompletions_WithHistory.class);
	
	private void validate() {
		requireNonNull(Request, "Request is required.");
		DeployedModelImpl.validate(DeployedModel, ENUM_ModelModality.TextGeneration);
	}
	
	private Map<String, Object> mapInputParameters() {
		Map<String, Object> inputParameters = new java.util.HashMap<>();
		Map<String, IDataType> parametersAndTypes = Core.getInputParameters(DeployedModel.getMicroflow());
		parametersAndTypes.forEach((t, u) -> {
			if(Core.getMetaObject(u.getObjectType()).isSubClassOf(genaicommons.proxies.DeployedModel.getType())) {
				inputParameters.put(t, DeployedModel.getMendixObject());
			} else if(Core.getMetaObject(u.getObjectType()).isSubClassOf(genaicommons.proxies.Request.getType())) {
				inputParameters.put(t, Request.getMendixObject());
			}
		}
		);
		return inputParameters;
	}
	
	// END EXTRA CODE
}
