// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package pgvectorknowledgebase.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.meta.IMetaObject;
import com.mendix.webui.CustomJavaAction;
import pgvectorknowledgebase.impl.ChunkUtils;
import pgvectorknowledgebase.impl.MxLogger;
import pgvectorknowledgebase.proxies.Chunk;

/**
 * Use this operation to retrieve chunks from the knowledge base and set associations to the related mendix objects (if applicable). This operation returns a list of the same type of the TargetChunk input variable. 
 * Additional selection and filtering can be done by specifying the optional input parameters:
 * -Offset: number of records to skip (for batching purposes)
 * -MaxNumberOfResults: limit of the amount of records returned
 * -LabelList: when provided, this operation only returns chunks that are conform with all of the labels in the list.
 * 
 * The DatabaseConfiguration that is passed must contain the connection details to a PostgreSQL database server with the PgVector extension installed. This entity is typically configured at runtime or in after-startup logic.
 * By providing the KnowledgeBaseName parameter, you determine the knowledge base that was used for population earlier. 
 * The TargetChunk entity (type parameter) must be a specialization of the Chunk entity from this module. If it contains associations to (specializations of) the related mendix object for which the chunk was created, this will be set by this operation for easy processing afterwards.
 */
public class KnowledgeBaseChunkList_Retrieve_SetAssociation extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private IMendixObject __Connection;
	private genaicommons.proxies.Connection Connection;
	private java.lang.String TargetChunk;
	private IMendixObject __MetadataCollection;
	private genaicommons.proxies.MetadataCollection MetadataCollection;
	private java.lang.Long MaxNumberOfResults;
	private java.lang.Long Offset;

	public KnowledgeBaseChunkList_Retrieve_SetAssociation(IContext context, IMendixObject Connection, java.lang.String TargetChunk, IMendixObject MetadataCollection, java.lang.Long MaxNumberOfResults, java.lang.Long Offset)
	{
		super(context);
		this.__Connection = Connection;
		this.TargetChunk = TargetChunk;
		this.__MetadataCollection = MetadataCollection;
		this.MaxNumberOfResults = MaxNumberOfResults;
		this.Offset = Offset;
	}

	@java.lang.Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		this.Connection = this.__Connection == null ? null : genaicommons.proxies.Connection.initialize(getContext(), __Connection);

		this.MetadataCollection = this.__MetadataCollection == null ? null : genaicommons.proxies.MetadataCollection.initialize(getContext(), __MetadataCollection);

		// BEGIN USER CODE
		
		try { 
			IMetaObject targetChunk = Core.getMetaObject(TargetChunk);
			ChunkUtils.validateTargetChunk(targetChunk);
			
			// call a microflow to retrieve chunks
			java.util.List<Chunk> chunkList = pgvectorknowledgebase.proxies.microflows.Microflows.chunkList_Retrieve(
					getContext(), DatabaseConfiguration, KnowledgeBaseName, MaxNumberOfResults, LabelList, Offset);
			
			//map to target chunks to return
			return ChunkUtils.getTargetChunkList(getContext(), chunkList, targetChunk);
			
		} catch (Exception e) {
			LOGGER.error(e.getMessage());
			throw e;
		}
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "KnowledgeBaseChunkList_Retrieve_SetAssociation";
	}

	// BEGIN EXTRA CODE
	private static final MxLogger LOGGER = new MxLogger(ChunkList_Retrieve_SetAssociation.class);
	// END EXTRA CODE
}
