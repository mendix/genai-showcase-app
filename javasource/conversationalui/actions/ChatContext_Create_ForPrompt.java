// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package conversationalui.actions;

import static java.util.Objects.requireNonNull;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import conversationalui.impl.MxLogger;
import conversationalui.proxies.PromptToUse;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class ChatContext_Create_ForPrompt extends CustomJavaAction<IMendixObject>
{
	private IMendixObject __OverwritingDeployedModel;
	private genaicommons.proxies.DeployedModel OverwritingDeployedModel;
	private java.lang.String ActionMicroflow;
	private IMendixObject __Prompt;
	private conversationalui.proxies.Prompt Prompt;
	private IMendixObject VariablesObject;

	public ChatContext_Create_ForPrompt(IContext context, IMendixObject OverwritingDeployedModel, java.lang.String ActionMicroflow, IMendixObject Prompt, IMendixObject VariablesObject)
	{
		super(context);
		this.__OverwritingDeployedModel = OverwritingDeployedModel;
		this.ActionMicroflow = ActionMicroflow;
		this.__Prompt = Prompt;
		this.VariablesObject = VariablesObject;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		this.OverwritingDeployedModel = this.__OverwritingDeployedModel == null ? null : genaicommons.proxies.DeployedModel.initialize(getContext(), __OverwritingDeployedModel);

		this.Prompt = this.__Prompt == null ? null : conversationalui.proxies.Prompt.initialize(getContext(), __Prompt);

		// BEGIN USER CODE
		
		try {
		    requireNonNull(Prompt, "Prompt is required.");
		    
		    PromptToUse promptToUse = Core.userActionCall(PromptToUse_GetAndReplace.class.toString())
		    		.withParams(Prompt.getTitle(), VariablesObject)
		    		.execute(getContext());
		    if (promptToUse == null) {
		    	return null;
		    }
		    
		    return Core.userActionCall(ChatContext_Create_SetActionMicroflow.class.toString())
		    		.withParams((OverwritingDeployedModel != null ? OverwritingDeployedModel : Prompt.getPrompt_DeployedModel()), ActionMicroflow, promptToUse.getSystemPrompt(), Prompt.getTitle())
		    		.execute(getContext());

		} catch (Exception e) {
		    LOGGER.error(e);
		    return null;
		}
		
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ChatContext_Create_ForPrompt";
	}

	// BEGIN EXTRA CODE
	
	private static final MxLogger LOGGER = new MxLogger(ChatContext_Create_ForPrompt.class);
	
	// END EXTRA CODE
}
