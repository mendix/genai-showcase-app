// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package promptmanagement.actions;

import java.util.ArrayList;
import java.util.List;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import promptmanagement.proxies.Prompt;
import promptmanagement.proxies.PromptToUse;
import promptmanagement.proxies.Variable;
import promptmanagement.proxies.Version;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class PromptToUse_GetViaJA extends CustomJavaAction<IMendixObject>
{
	private java.lang.String PromptName;
	private IMendixObject ObjectToExtractVariables;

	public PromptToUse_GetViaJA(IContext context, java.lang.String PromptName, IMendixObject ObjectToExtractVariables)
	{
		super(context);
		this.PromptName = PromptName;
		this.ObjectToExtractVariables = ObjectToExtractVariables;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
		PromptToUse promptToUse = new PromptToUse(getContext());
		
		
		// call a microflow to retrieve chunks
		Version versionInUse = promptmanagement.proxies.microflows.Microflows.version_GetForPromptTitle(
				getContext(), PromptName);
		promptToUse.setPromptToUse_Version(versionInUse);
		promptToUse.setSystemPrompt(versionInUse.getSystemPrompt());
		promptToUse.setUserPrompt(versionInUse.getUserPrompt());
		
		replaceVariables(promptToUse,versionInUse.getMendixObject(),ObjectToExtractVariables);
		
		return promptToUse.getMendixObject();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "PromptToUse_GetViaJA";
	}

	// BEGIN EXTRA CODE
	private void replaceVariables(PromptToUse promptToUse, IMendixObject versionInUse, IMendixObject objectToExtractVariables) throws CoreException {
	
		List<IMendixObject> prompt =  Core.retrieveByPath(getContext(), versionInUse,  "PromptManagement.Version_Prompt"); 
		List<IMendixObject> variableList =  Core.retrieveByPath(getContext(),prompt.get(0), "PromptManagement.Variable_Prompt");
		
		for(IMendixObject variableIterator : variableList) {
			Variable variable = promptmanagement.proxies.Variable.load(getContext(), variableIterator.getId());
			
			if (!objectToExtractVariables.hasMember(variable.getKey())) {
				continue;
			}
			String value = objectToExtractVariables.getValue(getContext(), variable.getKey()).toString();
			
			if(!value.isEmpty()) {
				promptmanagement.proxies.microflows.Microflows.promptToUse_ApplyVariable(getContext(), promptToUse,  
						variable.getKey(), value);
			}
		}
			
			
	}
	// END EXTRA CODE
}
